WORK ON +=  *=

Algorithums - bigO

divide and conqure > dividing lists in half while searching

anything above worse case is "loosely bound"


bigO tight bound - best of the worse case

big omega - best case

when asked --
worst case "N^2"

N = linear

Constant (console.log(arr[i]) (N)


for loop + for loop = (2N)




SPACE COMPLEXITY

space is memory


Auxiliary Space = extra space

space complexity = extra space + input space
^ When people say it, they just mean extra space


var i=0 << 1 unit of memory of auxiliary space



------COMMON BIG-O ORDERS-----

O(logn) - binary search.

Linear O(n) 

Quasilinear O(nlogn) - for sorting algorithims

Quadratic O(n^) nested loops, matrix traversal

O(n^c) (c is constant) -- deeply nested loops


